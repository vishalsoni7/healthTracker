{"ast":null,"code":"var _jsxFileName = \"/Users/vishalsoni/healthTracker/src/routes.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { toggleBgMode } from \"./actions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DarkModeSwitch } from \"react-toggle-dark-mode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Routers = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const bgState = useSelector(state => state.bg);\n  const [bg, setBg] = useState(bgState);\n  const handleRoute = e => {\n    if (e.target.textContent === \"Home\") {\n      navigate(\"/\");\n    } else {\n      navigate(e.target.textContent.toLowerCase());\n    }\n  };\n  useEffect(() => {\n    localStorage.setItem(\"bg\", bg);\n  }, [bg]);\n  useEffect(() => {\n    const storedBg = localStorage.getItem(\"bg\");\n    if (storedBg) {\n      setBg(storedBg);\n    }\n  }, []);\n  console.log({\n    bgState,\n    bg\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav-bar \".concat(bg ? \"nav-dark\" : \"nav-light\"),\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" neog health \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nav-link\",\n        onClick: handleRoute,\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nav-link\",\n        onClick: handleRoute,\n        children: \"Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nav-link\",\n        onClick: handleRoute,\n        children: \"Foods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nav-link \",\n        onClick: handleRoute,\n        children: \"Goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"p-margin\",\n        children: /*#__PURE__*/_jsxDEV(DarkModeSwitch, {\n          checked: bg,\n          onChange: () => dispatch(toggleBgMode()),\n          size: 20,\n          style: {\n            background: \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Routers, \"WNw6cDvipYZ+rk2DH9lRZaHqY8k=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = Routers;\nvar _c;\n$RefreshReg$(_c, \"Routers\");","map":{"version":3,"names":["useEffect","useState","toggleBgMode","useNavigate","useDispatch","useSelector","DarkModeSwitch","jsxDEV","_jsxDEV","Routers","_s","dispatch","navigate","bgState","state","bg","setBg","handleRoute","e","target","textContent","toLowerCase","localStorage","setItem","storedBg","getItem","console","log","className","concat","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","onChange","size","style","background","_c","$RefreshReg$"],"sources":["/Users/vishalsoni/healthTracker/src/routes.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { toggleBgMode } from \"./actions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DarkModeSwitch } from \"react-toggle-dark-mode\";\n\nexport const Routers = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const bgState = useSelector((state) => state.bg);\n  const [bg, setBg] = useState(bgState);\n\n  const handleRoute = (e) => {\n    if (e.target.textContent === \"Home\") {\n      navigate(\"/\");\n    } else {\n      navigate(e.target.textContent.toLowerCase());\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"bg\", bg);\n  }, [bg]);\n\n  useEffect(() => {\n    const storedBg = localStorage.getItem(\"bg\");\n    if (storedBg) {\n      setBg(storedBg);\n    }\n  }, []);\n\n  console.log({ bgState, bg });\n\n  \n\n  return (\n    <div className={`nav-bar ${bg ? \"nav-dark\" : \"nav-light\"}`}>\n      <h3> neog health </h3>\n\n      <div className=\"navigation\">\n        <p className=\"nav-link\" onClick={handleRoute}>\n          Home\n        </p>\n        <p className=\"nav-link\" onClick={handleRoute}>\n          Exercises\n        </p>\n\n        <p className=\"nav-link\" onClick={handleRoute}>\n          Foods\n        </p>\n\n        <p className=\"nav-link \" onClick={handleRoute}>\n          Goals\n        </p>\n\n        <span className=\"p-margin\">\n          <DarkModeSwitch\n            checked={bg}\n            onChange={() => dispatch(toggleBgMode())}\n            size={20}\n            style={{ background: \"red\" }}\n          />\n        </span>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}